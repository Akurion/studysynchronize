
from dotenv import load_dotenv
import os
import telebot
from telebot import types

load_dotenv('token.env')
bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
bot = telebot.TeleBot(bot_token);


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞')
    btn2 = types.KeyboardButton('üá¨üáß English')
    markup.add(btn1, btn2)
    bot.send_message(message.from_user.id, "üá∫üá¶ –û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É / üá¨üáß Choose your language", reply_markup=markup)


# –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞
@bot.message_handler(func=lambda message: message.text == "üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞")
def get_ukrainian(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üì∞ –ü—Ä–æ –Ω–∞—Å')
    btn2 = types.KeyboardButton('üõ† –ß–∞—Å—Ç—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è')
    btn3 = types.KeyboardButton('üìö –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è')
    btn4 = types.KeyboardButton('üì£ –í–∏–∫–ª–∏–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
    btn5 = types.KeyboardButton('üîô Return to language selection')
    markup.add(btn1, btn2, btn3, btn4, btn5)
    bot.send_message(message.from_user.id, "üëã –í–∞—Å –≤—ñ—Ç–∞—î –±–æ—Ç –ø—Ä–æ—î–∫—Ç—É StudySynchronize", reply_markup=markup)
    bot.send_message(message.from_user.id, 'üëÄ –û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª')

@bot.message_handler(func=lambda message: message.text == 'üì∞ –ü—Ä–æ –Ω–∞—Å')
def about_us_ukrainian(message):
    about_text = """
    üìö StudySynchronize- —Ü–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–ø—ñ–ª—å–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è –∑–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—î—é –ø–æ–º–æ–¥–æ—Ä–æ. –ú–∏ —Å—Ç–≤–æ—Ä–∏–ª–∏ —Ü–µ–π –ø—Ä–æ—î–∫—Ç, —â–æ–± –∑–∞–±–µ–∑–ø–µ—á–∏—Ç–∏ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ª—é–¥—è–º –∑—ñ–±—Ä–∞—Ç–∏—Å—è –≤ –º–∞–ª–µ–Ω—å–∫—ñ –≥—Ä—É–ø–∏ —Ç–∞ —Ä–∞–∑–æ–º –≤—á–∏—Ç–∏—Å—è, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥–∏–∫—É –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —á–∞—Å–æ–º.

    –ù–∞—à –ø—Ä–æ—î–∫—Ç –Ω–∞–¥–∞—î –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ:

    ü§ù –ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –≥—Ä—É–ø–∏ –Ω–∞–≤—á–∞–Ω–Ω—è —Ç–∞ –∑–Ω–∞–π—Ç–∏ –æ–¥–Ω–æ–¥—É–º—Ü—ñ–≤ –∑—ñ —Å—Ö–æ–∂–∏–º–∏ —ñ–Ω—Ç–µ—Ä–µ—Å–∞–º–∏ —Ç–∞ –Ω–∞–≤—á–∞–ª—å–Ω–∏–º–∏ –ø–æ—Ç—Ä–µ–±–∞–º–∏.
    üé• –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—é –≤–µ–±–∫–∞–º–µ—Ä –¥–ª—è –≤—ñ–∑—É–∞–ª—å–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É –∑ —ñ–Ω—à–∏–º–∏ —É—á–∞—Å–Ω–∏–∫–∞–º–∏ –≥—Ä—É–ø–∏.
    ‚è± –ù–∞–≤—á–∞—Ç–∏—Å—è –∑–∞ –º–µ—Ç–æ–¥–∏–∫–æ—é –ø–æ–º–æ–¥–æ—Ä–æ, —Ä–æ–∑–¥—ñ–ª—è—é—á–∏ —Å–≤—ñ–π —á–∞—Å –Ω–∞ –ø–µ—Ä—ñ–æ–¥–∏ —Ä–æ–±–æ—Ç–∏ —ñ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ.
    üìä –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ —Å–≤–æ—ó –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è —Ç–∞ –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ —Å–≤—ñ–π –ø—Ä–æ–≥—Ä–µ—Å —É –Ω–∞–≤—á–∞–Ω–Ω—ñ.

    –ú–∏ –≤—ñ—Ä–∏–º–æ, —â–æ —Å–ø—ñ–ª—å–Ω–µ –Ω–∞–≤—á–∞–Ω–Ω—è —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –ø–æ–º–æ–¥–æ—Ä–æ –¥–æ–ø–æ–º–æ–∂–µ –∫–æ–∂–Ω–æ–º—É —É—á–∞—Å–Ω–∏–∫—É –¥–æ—Å—è–≥—Ç–∏ —Å–≤–æ—ó—Ö –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö —Ü—ñ–ª–µ–π —Ç–∞ –ø—ñ–¥–≤–∏—â–∏—Ç–∏ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Å–≤–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è. –î–æ–ª—É—á–∞–π—Ç–µ—Å—å –¥–æ StudySyncronize —Ç–∞ –ø–æ—á–Ω—ñ—Ç—å –∑–¥–æ–±—É–≤–∞—Ç–∏ –Ω–æ–≤—ñ –∑–Ω–∞–Ω–Ω—è —Ä–∞–∑–æ–º –∑ –Ω–∞–º–∏!
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥')
    markup.add(btn1)
    bot.send_message(message.chat.id, about_text, reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == 'üõ† –ß–∞—Å—Ç—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è')
def faq_ukrainian(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('–©–æ —Ç–∞–∫–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—è –Ω–∞–≤—á–∞–Ω–Ω—è "Pomodoro"?', callback_data='q1_ukrainian')
    btn2 = types.InlineKeyboardButton('–Ø–∫–∏–º —á–∏–Ω–æ–º –±—É–¥–µ –≤—ñ–¥–±—É–≤–∞—Ç–∏—Å—å –Ω–∞–≤—á–∞–Ω–Ω—è?', callback_data='q2_ukrainian')
    markup.add(btn1, btn2)
    btn_back = types.KeyboardButton('üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥')
    bot.send_message(message.chat.id, "üìö –ù–∞–π—á–∞—Å—Ç—ñ—à—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è", reply_markup=markup)
    bot.send_message(message.chat.id, "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.",  reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add(btn_back))


@bot.message_handler(func=lambda message: message.text == 'üìö –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è')
def reg_ukrainian(message):
    reg_text = """
    –°–∫–æ—Ä–æ
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥')
    markup.add(btn1)
    bot.send_message(message.chat.id, reg_text, reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == 'üì£ –í–∏–∫–ª–∏–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
def call_ukrainian(message):
    call_text = """
    –°–∫–æ—Ä–æ
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥')
    markup.add(btn1)
    bot.send_message(message.chat.id, call_text, reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == 'üîô Return to language selection')
def return_language_ukrainian(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞')
    btn2 = types.KeyboardButton('üá¨üáß English')
    markup.add(btn1, btn2)
    bot.send_message(message.from_user.id, "üá∫üá¶ –û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É / üá¨üáß Choose your language", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == 'üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥')
def return_to_menu_ukrainian(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üì∞ –ü—Ä–æ –Ω–∞—Å')
    btn2 = types.KeyboardButton('üõ† –ß–∞—Å—Ç—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è')
    btn3 = types.KeyboardButton('üìö –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è')
    btn4 = types.KeyboardButton('üì£ –í–∏–∫–ª–∏–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
    btn5 = types.KeyboardButton('üîô Return to language selection')
    markup.add(btn1, btn2, btn3, btn4, btn5)
    bot.send_message(message.from_user.id, 'üëÄ –û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª', reply_markup=markup)




# FAQ_ukrainian
@bot.callback_query_handler(func=lambda call: call.data == 'q1_ukrainian')
def q1_ukrainian(call):
    faq_text = """
    –¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—è –Ω–∞–≤—á–∞–Ω–Ω—è "Pomodoro" - ‚è≥ —Ü–µ –º–µ—Ç–æ–¥–∏–∫–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —á–∞—Å–æ–º, —è–∫–∞ –¥–æ–ø–æ–º–∞–≥–∞—î –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Ç–∞ –∑–æ—Å–µ—Ä–µ–¥–∂–µ–Ω—ñ—Å—Ç—å —à–ª—è—Ö–æ–º —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è —á–∞—Å—É –Ω–∞ –ø–µ—Ä—ñ–æ–¥–∏ –∞–∫—Ç–∏–≤–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ —ñ –∫–æ—Ä–æ—Ç–∫–∏—Ö –ø–µ—Ä–µ—Ä–≤. 
    –û—Å–Ω–æ–≤–Ω–∞ —ñ–¥–µ—è –ø–æ–ª—è–≥–∞—î –≤ —Ç–æ–º—É, —â–æ–± –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –ø—Ä–æ—Ç—è–≥–æ–º –ø–µ–≤–Ω–æ–≥–æ –ø–µ—Ä—ñ–æ–¥—É (–∑–∞–∑–≤–∏—á–∞–π 25 —Ö–≤–∏–ª–∏–Ω), –∞ –ø–æ—Ç—ñ–º —Ä–æ–±–∏—Ç–∏ –∫–æ—Ä–æ—Ç–∫—É –ø–µ—Ä–µ—Ä–≤—É (–∑–∞–∑–≤–∏—á–∞–π 5 —Ö–≤–∏–ª–∏–Ω). –ü—ñ—Å–ª—è –∫—ñ–ª—å–∫–æ—Ö —Ü–∏–∫–ª—ñ–≤ —Ä–æ–±–æ—Ç–∏ —ñ –ø–µ—Ä–µ—Ä–≤–∏ —Ä–æ–±–∏—Ç—å—Å—è –¥–æ–≤—à–∞ –ø–µ—Ä–µ—Ä–≤–∞, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 15-30 —Ö–≤–∏–ª–∏–Ω. 
    –¶–µ–π –º–µ—Ç–æ–¥ –¥–æ–∑–≤–æ–ª—è—î –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –≤–∏—Å–æ–∫—É –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü—ñ—é —É–≤–∞–≥–∏ –ø—Ä–æ—Ç—è–≥–æ–º —Ç—Ä–∏–≤–∞–ª–æ–≥–æ —á–∞—Å—É, –∞ —Ç–∞–∫–æ–∂ –∑–∞–ø–æ–±—ñ–≥–∞—î –≤—Ç–æ–º—ñ —ñ –ø–µ—Ä–µ–Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—é –º–æ–∑–∫—É.
    """
    bot.send_message(call.message.chat.id, faq_text)

@bot.callback_query_handler(func=lambda call: call.data == 'q2_ukrainian')
def q2_ukrainian(call):
    faq_text = """
    üåê –ù–∞—à –æ–Ω–ª–∞–π–Ω –Ω–∞–≤—á–∞–ª—å–Ω–∏–π –∫—É—Ä—Å –≤—ñ–¥–±—É–≤–∞—Ç–∏–º–µ—Ç—å—Å—è —É —Ñ–æ—Ä–º–∞—Ç—ñ Discord. 
    –ü—ñ—Å–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –≤–∏ –º–∞—Ç–∏–º–µ—Ç–µ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –æ–±—Ä–∞—Ç–∏ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ —ñ—Å–Ω—É—é—á–∏—Ö –≥—Ä—É–ø –∞–±–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –≤–ª–∞—Å–Ω—É. 
    –ü—Ä–∏—î–¥–Ω–∞–≤—à–∏—Å—å –¥–æ –≥—Ä—É–ø–∏, –≤–∏ –º–∞—Ç–∏–º–µ—Ç–µ –∑–º–æ–≥—É –≤–∑–∞—î–º–æ–¥—ñ—è—Ç–∏ –∑ –æ–¥–Ω–æ–≥—Ä—É–ø–Ω–∏–∫–∞–º–∏ —á–µ—Ä–µ–∑ –≤–µ–±-–∫–∞–º–µ—Ä—É, —â–æ —Å—Ç–≤–æ—Ä–∏—Ç—å –µ—Ñ–µ–∫—Ç–∏–≤–Ω–µ –≤—ñ–∑—É–∞–ª—å–Ω–µ –∑–≤'—è–∑–æ–∫ —Ç–∞ –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º –∑–±–µ—Ä–µ–≥—Ç–∏ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω—É –ø—ñ–¥ —á–∞—Å –Ω–∞–≤—á–∞–Ω–Ω—è. 
    –ú—ñ–∫—Ä–æ—Ñ–æ–Ω –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–º–∫–Ω–µ–Ω–æ, –∞ —á–∞—Ç –≤—ñ–¥–∫–ª—é—á–µ–Ω–∏–π, —â–æ–± –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä—É–≤–∞—Ç–∏ –≤–∞—Å –Ω–∞ –Ω–∞–≤—á–∞–Ω–Ω—ñ.
    """
    bot.send_message(call.message.chat.id, faq_text)





# –ê–Ω–≥–ª—ñ–π—Å—å–∫–∞

@bot.message_handler(func=lambda message: message.text == "üá¨üáß English")
def get_english(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üì∞ About us')
    btn2 = types.KeyboardButton('üõ† FAQ')
    btn3 = types.KeyboardButton('üìö Registration')
    btn4 = types.KeyboardButton('üì£ Call the administrator')
    btn5 = types.KeyboardButton('üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –≤–∏–±–æ—Ä—É –º–æ–≤–∏')
    markup.add(btn1, btn2, btn3, btn4, btn5)
    bot.send_message(message.from_user.id, "üëã Welcome to the StudySynchronize project bot.", reply_markup=markup)
    bot.send_message(message.from_user.id, 'üëÄ Choose a section')

@bot.message_handler(func=lambda message: message.text == 'üì∞ About us')
def about_us_english(message):
    about_text = """
    üìö StudySynchronize is a platform for collaborative learning using the Pomodoro technique. We've created this project to provide people with the opportunity to gather in small groups and learn together, utilizing effective time management methods.

    Our project offers:

    ü§ù Joining study groups and finding like-minded individuals with similar interests and learning needs.
    üé• Using webcam technology for visual communication with other group participants.
    ‚è± Learning through the Pomodoro technique, dividing time into work and rest periods for maximum productivity.
    üìä Keeping track of achievements and monitoring progress in learning.

    We believe that collaborative learning and the use of the Pomodoro technique will help each participant achieve their educational goals and enhance the effectiveness of their learning. Join StudySyncronize and start acquiring new knowledge together with us!
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üîô Go back')
    markup.add(btn1)
    bot.send_message(message.chat.id, about_text, reply_markup=markup)




@bot.message_handler(func=lambda message: message.text == 'üõ† FAQ')
def faq_english(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('What is the "Pomodoro" learning technique?', callback_data='q1_english')
    btn2 = types.InlineKeyboardButton('How will the learning process take place?', callback_data='q2_english')
    markup.add(btn1, btn2)
    btn_back = types.KeyboardButton('üîô Go back')
    bot.send_message(message.chat.id, "üìö Frequently asked questions", reply_markup=markup)
    bot.send_message(message.chat.id, "Press the question to get the answer.",  reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add(btn_back))

@bot.message_handler(func=lambda message: message.text == 'üìö Registration')
def reg_english(message):
    reg_text = """
    Soon
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üîô Go back')
    markup.add(btn1)
    bot.send_message(message.chat.id, reg_text, reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == 'üì£ Call the administrator')
def call_english(message):
    call_text = """
    Soon
    """
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üîô Go back')
    markup.add(btn1)
    bot.send_message(message.chat.id, call_text, reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == 'üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –≤–∏–±–æ—Ä—É –º–æ–≤–∏')
def return_language_english(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞')
    btn2 = types.KeyboardButton('üá¨üáß English')
    markup.add(btn1, btn2)
    bot.send_message(message.from_user.id, "üá∫üá¶ –û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É / üá¨üáß Choose your language", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == 'üîô Go back')
def return_to_menu_english(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üì∞ About us')
    btn2 = types.KeyboardButton('üõ† FAQ')
    btn3 = types.KeyboardButton('üìö Registration')
    btn4 = types.KeyboardButton('üì£ Call the administrator')
    btn5 = types.KeyboardButton('üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –≤–∏–±–æ—Ä—É –º–æ–≤–∏')
    markup.add(btn1, btn2, btn3, btn4, btn5)
    bot.send_message(message.from_user.id, 'üëÄ Choose a section', reply_markup=markup)


# FAQ_english
@bot.callback_query_handler(func=lambda call: call.data == 'q1_english')
def q1_english(call):
    faq_text = """
    
The Pomodoro Technique ‚è≥ is a time management method that helps improve productivity and focus by dividing time into periods of focused work and short breaks. 
he main idea is to work for a set period (usually 25 minutes) and then take a short break (usually 5 minutes). After several work and break cycles, a longer break is taken, for example, 15-30 minutes. 
This method helps maintain high levels of focus over extended periods and prevents fatigue and mental overload.
    """
    bot.send_message(call.message.chat.id, faq_text)

@bot.callback_query_handler(func=lambda call: call.data == 'q2_english')
def q2_english(call):
    faq_text = """
    üåê Our online learning course will take place on Discord. 
    After registration, you'll have the option to join existing groups or create your own. 
    Once in a group, you'll be able to interact with fellow learners via webcam, fostering effective visual communication and helping you maintain discipline during study sessions. 
    Microphones will be automatically muted, and chat will be disabled to maximize your focus on learning.
    """
    bot.send_message(call.message.chat.id, faq_text)


bot.polling(none_stop=True, interval=0)